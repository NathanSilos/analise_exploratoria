# -*- coding: utf-8 -*-
"""Cópia de Analise Exploratoria.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DcoMvWBsKDE28RnN4OppocFwYx8NS_Y7
"""

import pandas as pd
import numpy as np

"""**Primeiro passo importar a base e dar uma olhada em cada um dos registros para saber com o que estamos trabalhando**"""

# Utilizando o encoding latin-1 para caso tenha alguma palavra com acento/caracter específico da lingua portuguesa
vendedor = pd.read_csv('/content/drive/MyDrive/Data Science/bases/vendedor.csv', delimiter = ';', encoding='latin-1')

vendedor.head()

# Utilizando o encoding latin-1 para caso tenha alguma palavra com acento/caracter específico da lingua portuguesa
vendas_tran = pd.read_csv('/content/drive/MyDrive/Data Science/bases/vendas_tran.csv', delimiter = ';', encoding='latin-1')

vendas_tran.head()

# Verificando o tamanho de cada uma das tabelas
vendas_tran.shape, vendedor.shape

"""**Cruzamento entre os DataFrames**

"""

# Left join entre a tabela vendas_tran e a de vendedor
base_cruzada = pd.merge(vendas_tran, vendedor, left_on='SalesPersonId', right_on='Salespersonid')

# Removendo a chave estrangeira duplicada após o cruzamento
base_cruzada.drop('Salespersonid', axis=1)

base_cruzada.head(2)

"""**Criando algumas visualizações**"""

import matplotlib.pyplot as plt
import plotly.express as px
import sweetviz as sv

# Caso não tenha alguma das libs acima instalada, basta rodar o comando: !pip install *nome da biblioteca*
# Exemplo: 
!pip install sweetviz

# Caso necessite atualizar o plotly ou outra lib, então rode o código abaixo
!pip install plotly --upgrade

# Criando um reporte com o sweetviz
reporte = sv.analyze(base_cruzada)
reporte.show_notebook()

# Criando visualização dos vendedores e seus pedidos vendidos

plt.hist(x = base_cruzada['SalesPersonName'], color='green');

# Criando um gráfico interativo que relaciona os vendedores com as categorias e sub-categorias de suas vendas
grafico = px.parallel_categories(base_cruzada, dimensions=['SalesPersonName', 'Category','SubCategory'], color_continuous_scale ='green')
grafico.show()

# Gráficos cruzados entre categoria e os clientes, com a coloração feita pelo lucro de cada venda
grafico2 = px.scatter_matrix(base_cruzada, 
                            dimensions=['Category','CustomerName'],
                            color='Profit')
grafico2.show()